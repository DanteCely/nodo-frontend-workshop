{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Jhon Bustamante\\\\Desktop\\\\Web dev\\\\Nodo\\\\Ejemplos y proyectos\\\\Proyectos\\\\Memory-game-react\\\\React-Firebase-lesson-58\\\\magic-memory\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/helmet-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/potion-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/ring-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/scroll-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/shield-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/sword-1.png\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  // shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  //handle a choice\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  //Compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n\n  //reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/JnteANCPxCZNpFpO1ZAWIjzFcc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SingleCard","cardImages","matched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","prevCards","resetTurn","console","log","prevTurns"],"sources":["D:/Users/Jhon Bustamante/Desktop/Web dev/Nodo/Ejemplos y proyectos/Proyectos/Memory-game-react/React-Firebase-lesson-58/magic-memory/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport './App.css'\nimport SingleCard from './components/SingleCard'\n\nconst cardImages = [\n  { \"src\": \"/img/helmet-1.png\", matched: false},\n  { \"src\": \"/img/potion-1.png\", matched: false},\n  { \"src\": \"/img/ring-1.png\", matched: false},\n  { \"src\": \"/img/scroll-1.png\", matched: false},\n  { \"src\": \"/img/shield-1.png\", matched: false},\n  { \"src\": \"/img/sword-1.png\", matched: false}\n\n]\n\nfunction App() {\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n\n  // shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages] \n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random()}))\n\n    setCards(shuffledCards)\n    setTurns(0)\n  }\n\n  //handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  //Compare 2 selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      \n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            } else{\n              return card\n            }\n          })\n        })\n        resetTurn()\n      } else {\n        \n        resetTurn()\n      }\n    }\n  }, [choiceOne, choiceTwo] )\n\n  console.log(cards);\n\n  //reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className='card-grid' >\n        {cards.map(card => (\n          <SingleCard key={card.id} card={card}\n          handleChoice = {handleChoice}\n          flipped={card === choiceOne || card === choiceTwo}\n          />\n        ))}\n\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}